# jupyter-langs:python

# https://hub.docker.com/_/node
ARG node_version=20
FROM node:${node_version}-bullseye-slim as nodejs 

# https://hub.docker.com/r/continuumio/miniconda3
# https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile
FROM continuumio/miniconda3:4.12.0

LABEL maintainer="HeRoMo"
LABEL Description="Jupyter lab for Python3 and Javascript"
LABEL Version="5.17.0"

ENV HOME=/root
ENV NOTEBOOK_DIR=/jupyter/notebooks
ENV JUPYTER_DIR=/opt/jupyter
ENV MATPLOTLIBRC=/opt/jupyter

WORKDIR /jupyter

# Install required packages
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
            curl \
            build-essential \
            libc6 \
            cmake \
            gnupg \
            locales \
            fonts-noto-cjk \
            # for ZeroMQ
            libtool \
            libffi-dev \
            libzmq3-dev \
            libczmq-dev \
            # use to build ZeroMQ, https://stackoverflow.com/questions/33380020/errorcould-not-find-pkgconfig-missing-pkg-config-executable
            pkg-config \
    && apt-get clean 
    # && rm -rf /var/lib/apt/lists/*


# Upgrade conda, install mamba
RUN conda update -n base -c defaults conda
RUN conda install -c conda-forge mamba -y 

# Install Jupyter, and common lib
RUN mamba update -c conda-forge --all
RUN mamba install -y -c conda-forge  \
                python=3.10 \
                pandas \
                scipy \
                matplotlib \
                # tensorflow \
                # keras \
                # plotly \
                # pytorch
                # torch \
                # torchvision \
                # torchaudio \
                notebook \
                jupyterlab>=3.4 \
                libiconv \
                ipywidgets>=8.0 \
                ipyleaflet \
                # for dash
                # dash 
                lxml \
                xlrd \
                xlwt \
    && conda clean -y --all

RUN jupyter contrib nbextension install --user
# RUN pip install jupyter_dash tflearn

RUN mkdir -p $NOTEBOOK_DIR \
    && mkdir -p $JUPYTER_DIR \
    && mkdir -p $MATPLOTLIBRC
COPY conf/matplotlibrc $MATPLOTLIBRC/matplotlibrc
COPY conf/jupyter_notebook_config.py $JUPYTER_DIR/jupyter_notebook_config.py

# Install Javascript
ENV NODE_VERSION ${node_version}
ENV YARN_VERSION 1.22.19
RUN mkdir -p /opt
COPY --from=nodejs /opt/yarn-v${YARN_VERSION} /opt/yarn
COPY --from=nodejs /usr/local/bin/node /usr/local/bin/
COPY --from=nodejs /usr/local/lib/node_modules/ /usr/local/lib/node_modules/
RUN ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
    && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \
    && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
    && ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm \
    && ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npx
RUN yarn global add typescript tslab \
    && tslab install \
    && yarn add @types/node

# Install jupyter labextensions
# RUN jupyter labextension install \
            # @jupyter-widgets/jupyterlab-manager \
            # jupyterlab-plotly \
            # plotlywidget \
            # jupyter-leaflet

# for JupyterLab
EXPOSE 8888
# for Dash
# EXPOSE 8050

# vs code jupyter extension xsrf error: add "--ServerApp.disable_check_xsrf=True". ref: https://stackoverflow.com/a/71533909
CMD ["jupyter", "lab", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--ServerApp.disable_check_xsrf=True", "--notebook-dir=/jupyter/notebooks", "--config=$JUPYTER_DIR/jupyter_notebook_config.py"]
